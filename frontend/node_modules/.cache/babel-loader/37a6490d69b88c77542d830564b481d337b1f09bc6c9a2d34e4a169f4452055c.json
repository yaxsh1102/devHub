{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashm\\\\Desktop\\\\devfront\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getGithubRepos } from \"../../actions/profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileGithub = ({\n  username\n}) => {\n  _s();\n  const repos = useSelector(state => state.profile.repos);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getGithubRepos(username));\n  }, [dispatch, username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fab fa-github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), \" Github Repos\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo bg-white p-1 my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-primary\",\n            children: [\"Stars: \", repo.stargazers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-dark\",\n            children: [\"Watchers: \", repo.watchers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-light\",\n            children: [\"Forks: \", repo.forks_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, repo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileGithub, \"ZoskQbzf8YThLhKL3fTTiqRn8zg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = ProfileGithub;\nexport default ProfileGithub;\nvar _c;\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","Spinner","getGithubRepos","jsxDEV","_jsxDEV","ProfileGithub","username","_s","repos","state","profile","dispatch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","repo","href","html_url","target","rel","name","description","stargazers_count","watchers_count","forks_count","id","_c","$RefreshReg$"],"sources":["C:/Users/yashm/Desktop/devfront/src/components/profile/ProfileGithub.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { getGithubRepos } from \"../../actions/profile\";\r\n\r\nconst ProfileGithub = ({ username }) => {\r\n  const repos = useSelector(state => state.profile.repos);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getGithubRepos(username));\r\n  }, [dispatch, username]);\r\n\r\n  return (\r\n    <div className=\"profile-github\">\r\n      <h2 className=\"text-primary my-1\">\r\n        <i className=\"fab fa-github\"></i> Github Repos\r\n      </h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map(repo => (\r\n          <div className=\"repo bg-white p-1 my-1\" key={repo.id}>\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n            <div>\r\n              <ul>\r\n                <li className=\"badge badge-primary\">\r\n                  Stars: {repo.stargazers_count}\r\n                </li>\r\n                <li className=\"badge badge-dark\">\r\n                  Watchers: {repo.watchers_count}\r\n                </li>\r\n                <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileGithub;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,cAAc,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAMC,KAAK,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC;EAEvD,MAAMG,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACda,QAAQ,CAACT,cAAc,CAACI,QAAQ,CAAC,CAAC;EACpC,CAAC,EAAE,CAACK,QAAQ,EAAEL,QAAQ,CAAC,CAAC;EAExB,oBACEF,OAAA;IAAKQ,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BT,OAAA;MAAIQ,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC/BT,OAAA;QAAGQ,SAAS,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,iBACnC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACJT,KAAK,KAAK,IAAI,gBACbJ,OAAA,CAACH,OAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAEXT,KAAK,CAACU,GAAG,CAACC,IAAI,iBACZf,OAAA;MAAKQ,SAAS,EAAC,wBAAwB;MAAAC,QAAA,gBACrCT,OAAA;QAAAS,QAAA,gBACET,OAAA;UAAAS,QAAA,eACET,OAAA;YACEgB,IAAI,EAAED,IAAI,CAACE,QAAS;YACpBC,MAAM,EAAC,QAAQ;YACfC,GAAG,EAAC,qBAAqB;YAAAV,QAAA,EAExBM,IAAI,CAACK;UAAI;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACLb,OAAA;UAAAS,QAAA,EAAIM,IAAI,CAACM;QAAW;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACNb,OAAA;QAAAS,QAAA,eACET,OAAA;UAAAS,QAAA,gBACET,OAAA;YAAIQ,SAAS,EAAC,qBAAqB;YAAAC,QAAA,GAAC,SAC3B,EAACM,IAAI,CAACO,gBAAgB;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACLb,OAAA;YAAIQ,SAAS,EAAC,kBAAkB;YAAAC,QAAA,GAAC,YACrB,EAACM,IAAI,CAACQ,cAAc;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eACLb,OAAA;YAAIQ,SAAS,EAAC,mBAAmB;YAAAC,QAAA,GAAC,SAAO,EAACM,IAAI,CAACS,WAAW;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA,GAvBqCE,IAAI,CAACU,EAAE;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAwB/C,CACN,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACV,EAAA,CA/CIF,aAAa;EAAA,QACHN,WAAW,EAERC,WAAW;AAAA;AAAA8B,EAAA,GAHxBzB,aAAa;AAiDnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}