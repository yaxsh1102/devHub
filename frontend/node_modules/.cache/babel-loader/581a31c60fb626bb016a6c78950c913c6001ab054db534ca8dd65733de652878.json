{"ast":null,"code":"import axios from \"axios\";\nimport toast from 'react-hot-toast';\nimport { GET_POSTS, GET_POST, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, ADD_COMMENT, REMOVE_COMMENT } from \"./types\";\n\n// Get posts\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get(\"http://127.0.0.1:8000/api/posts\");\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n    toast.error(`Error: ${err.response.statusText}`);\n  }\n};\n\n// Get post\nexport const getPost = postId => async dispatch => {\n  try {\n    const res = await axios.get(`http://127.0.0.1:8000/api/posts/${postId}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n    toast.error(`Error: ${err.response.statusText}`);\n  }\n};\n\n// Toggle Like\nexport const toggleLike = postId => async dispatch => {\n  try {\n    const res = await axios.post(`http://127.0.0.1:8000/api/posts/${postId}/like`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n    toast.error(`Error: ${err.response.statusText}`);\n  }\n};\n\n// Delete Post\nexport const deletePost = postId => async dispatch => {\n  try {\n    await axios.delete(`http://127.0.0.1:8000/api/posts/${postId}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: postId\n    });\n    toast.success(\"Post Removed\");\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n    toast.error(`Error: ${err.response.statusText}`);\n  }\n};\n\n// Add Post\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  try {\n    const res = await axios.post(\"http://127.0.0.1:8000/api/posts\", formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    toast.success(\"Post Added\");\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n    toast.error(`Error: ${err.response.statusText}`);\n  }\n};\n\n// Add Comment\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  try {\n    const res = await axios.post(`http://127.0.0.1:8000/api/posts/${postId}/comments`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    toast.success(\"Comment Added\");\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n    toast.error(`Error: ${err.response.statusText}`);\n  }\n};\n\n// Delete Comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    await axios.delete(`http://127.0.0.1:8000/api/posts/comments/${commentId}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n    toast.success(\"Comment Removed\");\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n    toast.error(`Error: ${err.response.statusText}`);\n  }\n};","map":{"version":3,"names":["axios","toast","GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","error","getPost","postId","toggleLike","post","deletePost","delete","success","addPost","formData","config","headers","addComment","deleteComment","commentId"],"sources":["C:/Users/yashm/Desktop/devfront/src/actions/post.js"],"sourcesContent":["import axios from \"axios\";\r\nimport toast from 'react-hot-toast';\r\nimport {\r\n  GET_POSTS,\r\n  GET_POST,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from \"./types\";\r\n\r\n// Get posts\r\nexport const getPosts = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(\"http://127.0.0.1:8000/api/posts\");\r\n    dispatch({ type: GET_POSTS, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n    toast.error(`Error: ${err.response.statusText}`);\r\n  }\r\n};\r\n\r\n// Get post\r\nexport const getPost = postId => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`http://127.0.0.1:8000/api/posts/${postId}`);\r\n    dispatch({ type: GET_POST, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n    toast.error(`Error: ${err.response.statusText}`);\r\n  }\r\n};\r\n\r\n// Toggle Like\r\nexport const toggleLike = postId => async dispatch => {\r\n  try {\r\n    const res = await axios.post(`http://127.0.0.1:8000/api/posts/${postId}/like`);\r\n    dispatch({ type: UPDATE_LIKES, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n    toast.error(`Error: ${err.response.statusText}`);\r\n  }\r\n};\r\n\r\n// Delete Post\r\nexport const deletePost = postId => async dispatch => {\r\n  try {\r\n    await axios.delete(`http://127.0.0.1:8000/api/posts/${postId}`);\r\n    dispatch({ type: DELETE_POST, payload: postId });\r\n    toast.success(\"Post Removed\");\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n    toast.error(`Error: ${err.response.statusText}`);\r\n  }\r\n};\r\n\r\n// Add Post\r\nexport const addPost = formData => async dispatch => {\r\n  const config = {\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n  try {\r\n    const res = await axios.post(\"http://127.0.0.1:8000/api/posts\", formData, config);\r\n    dispatch({ type: ADD_POST, payload: res.data });\r\n    toast.success(\"Post Added\");\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n    toast.error(`Error: ${err.response.statusText}`);\r\n  }\r\n};\r\n\r\n// Add Comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n  const config = {\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n  try {\r\n    const res = await axios.post(\r\n      `http://127.0.0.1:8000/api/posts/${postId}/comments`,\r\n      formData,\r\n      config\r\n    );\r\n    dispatch({ type: ADD_COMMENT, payload: res.data });\r\n    toast.success(\"Comment Added\");\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n    toast.error(`Error: ${err.response.statusText}`);\r\n  }\r\n};\r\n\r\n// Delete Comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n  try {\r\n    await axios.delete(`http://127.0.0.1:8000/api/posts/comments/${commentId}`);\r\n    dispatch({ type: REMOVE_COMMENT, payload: commentId });\r\n    toast.success(\"Comment Removed\");\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n    toast.error(`Error: ${err.response.statusText}`);\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}